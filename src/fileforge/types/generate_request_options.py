# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class GenerateRequestOptions(pydantic_v1.BaseModel):
    """
    Conversion options. This field is required even if empty.
    """

    test: typing.Optional[bool] = pydantic_v1.Field(default=None)
    """
    Generate a test document instead of a production document. The generated document will contain a watermark. Defaults to true.
    """

    host: typing.Optional[bool] = pydantic_v1.Field(default=None)
    """
    If enabled, the document will be hosted by FileForge and a presigned URL will be returned.
    """

    expires_at: typing.Optional[dt.datetime] = pydantic_v1.Field(alias="expiresAt", default=None)
    """
    If host is enabled, the expiration date of the presigned URL. Defaults to 7 days from now. Cannot exceed 7 days from now.
    """

    file_name: typing.Optional[str] = pydantic_v1.Field(alias="fileName", default=None)
    """
    The name of the generated PDF file. Defaults to document. The file name should not contain extensions nor path traversals.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
